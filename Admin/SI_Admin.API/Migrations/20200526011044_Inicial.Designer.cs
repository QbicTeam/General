// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SI_Admin.API.Data;

namespace SI_Admin.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200526011044_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("Framework.DataTypes.Model.Base.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contacto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Domicilio")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomCorto")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomEmpresa")
                        .HasColumnType("TEXT");

                    b.Property<string>("RFC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Base.ClienteNegocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataBase")
                        .HasColumnType("TEXT");

                    b.Property<int>("NegocioID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreNegocio")
                        .HasColumnType("TEXT");

                    b.Property<string>("PWD")
                        .HasColumnType("TEXT");

                    b.Property<string>("Puerto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Server")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserDB")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ClienteNegocios");
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Infraestructura.Aplicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Abr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ClienteActualizacionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LicenciaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PaqueteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteActualizacionId");

                    b.HasIndex("LicenciaId");

                    b.HasIndex("PaqueteId");

                    b.ToTable("Aplicaciones");
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Infraestructura.AppMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AplicacionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int>("PadreId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("URL")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AplicacionId");

                    b.HasIndex("PadreId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Licenciamiento.ClienteActualizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ClienteActualizaciones");
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Licenciamiento.ClienteActualizacionNegocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteActualizacionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NegocioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreNegocio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteActualizacionId");

                    b.ToTable("ClienteActualizacionNegocios");
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Licenciamiento.Licencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CostoIncial")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CostoTotalActual")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumNegociosTotal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumUsuariosTotal")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PaqueteInicialId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UltActualizacion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.HasIndex("PaqueteInicialId");

                    b.ToTable("Licencias");
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Licenciamiento.Paquete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Costo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumNegocios")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumUsuarios")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Paquetes");
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Base.ClienteNegocio", b =>
                {
                    b.HasOne("Framework.DataTypes.Model.Base.Cliente", null)
                        .WithMany("Negocios")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Infraestructura.Aplicacion", b =>
                {
                    b.HasOne("Framework.DataTypes.Model.Licenciamiento.ClienteActualizacion", null)
                        .WithMany("Apps")
                        .HasForeignKey("ClienteActualizacionId");

                    b.HasOne("Framework.DataTypes.Model.Licenciamiento.Licencia", null)
                        .WithMany("Aplicaciones")
                        .HasForeignKey("LicenciaId");

                    b.HasOne("Framework.DataTypes.Model.Licenciamiento.Paquete", null)
                        .WithMany("Apps")
                        .HasForeignKey("PaqueteId");
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Infraestructura.AppMenu", b =>
                {
                    b.HasOne("Framework.DataTypes.Model.Infraestructura.Aplicacion", null)
                        .WithMany("Menu")
                        .HasForeignKey("AplicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Framework.DataTypes.Model.Infraestructura.AppMenu", "Padre")
                        .WithMany()
                        .HasForeignKey("PadreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Licenciamiento.ClienteActualizacion", b =>
                {
                    b.HasOne("Framework.DataTypes.Model.Base.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Licenciamiento.ClienteActualizacionNegocio", b =>
                {
                    b.HasOne("Framework.DataTypes.Model.Licenciamiento.ClienteActualizacion", null)
                        .WithMany("Negocios")
                        .HasForeignKey("ClienteActualizacionId");
                });

            modelBuilder.Entity("Framework.DataTypes.Model.Licenciamiento.Licencia", b =>
                {
                    b.HasOne("Framework.DataTypes.Model.Base.Cliente", null)
                        .WithOne("Licencia")
                        .HasForeignKey("Framework.DataTypes.Model.Licenciamiento.Licencia", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Framework.DataTypes.Model.Licenciamiento.Paquete", "PaqueteInicial")
                        .WithMany()
                        .HasForeignKey("PaqueteInicialId");
                });
#pragma warning restore 612, 618
        }
    }
}
